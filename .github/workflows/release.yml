name: Release ESP32 CI

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # ===== CACHE pip =====
      - name: Cache pip (~/.cache/pip)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          # Kunci memakai OS + versi Python + perubahan pada platformio.ini (proxy dependency)
          key: ${{ runner.os }}-pip-3.11-${{ hashFiles('ci_build/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.11-
            ${{ runner.os }}-pip-

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install platformio

      # ===== CACHE PlatformIO =====
      - name: Cache PlatformIO (~/.platformio & ci_build/.pio)
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
            ci_build/.pio
          # Kunci berdasarkan OS + perubahan di platformio.ini (env, board, libs)
          key: ${{ runner.os }}-pio-${{ hashFiles('ci_build/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pio-

      # Fokus build hanya di ci_build (tanpa auto-locate)
      - name: Build (capture log)
        working-directory: ci_build
        shell: bash
        run: |
          set -e
          ( set -o pipefail; pio run -e full -v |& tee build.log )

      - name: Upload build log (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: ci_build/build.log
          retention-days: 7

      - name: Package
        id: pkg
        working-directory: ci_build
        shell: bash
        run: |
          set -e
          OUT=".pio/build/full"
          test -f "$OUT/firmware.bin" || { echo "ERROR: firmware.bin not found at $OUT"; exit 1; }
          mkdir -p dist
          cp "$OUT/firmware.bin"    dist/firmware.bin
          cp "$OUT"/bootloader*.bin dist/bootloader.bin 2>/dev/null || true
          cp "$OUT"/partitions*.bin dist/partitions.bin 2>/dev/null || true
          printf "bootloader.bin @ 0x1000\npartitions.bin @ 0x8000\nfirmware.bin   @ 0x10000\n" > dist/offsets.txt
          (cd dist && sha256sum * > SHA256SUMS.txt)
          ZIP="firmware_${GITHUB_REF_NAME#refs/tags/}.zip"
          (cd dist && zip -9 "../$ZIP" *)
          echo "zipname=$ZIP" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Firmware ${{ github.ref_name }}
          files: |
            ci_build/${{ steps.pkg.outputs.zipname }}
            ci_build/dist/SHA256SUMS.txt
