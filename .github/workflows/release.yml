name: Release (ESP32 full) — Minimal

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

env:
  PIO_ENV: full   # ganti kalau env kamu beda dari "full"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install platformio

      - name: Locate PlatformIO project
        id: pio
        shell: bash
        run: |
          set -e
          FILE="$(git ls-files | grep -m1 -E '^.*platformio\.ini$' || true)"
          if [ -z "$FILE" ]; then
            echo "ERROR: platformio.ini not found."
            exit 1
          fi
          DIR="$(dirname "$FILE")"
          echo "dir=$DIR" >> "$GITHUB_OUTPUT"
          echo "Found: $DIR/platformio.ini"

      - name: Show project tree
        working-directory: ${{ steps.pio.outputs.dir }}
        run: |
          echo "== Tree =="
          find . -maxdepth 2 -print
          echo "== Envlist =="
          pio run -t envlist || true

      - name: Build
        working-directory: ${{ steps.pio.outputs.dir }}
        run: pio run -e $PIO_ENV -v

      - name: Prepare release assets
        id: prep
        working-directory: ${{ steps.pio.outputs.dir }}
        shell: bash
        run: |
          set -e
          OUT=".pio/build/$PIO_ENV"
          mkdir -p dist
          # ambil app
          cp "$OUT/firmware.bin" dist/firmware.bin
          # ambil bootloader/partitions kalau ada (opsional)
          cp "$OUT"/bootloader*.bin dist/bootloader.bin 2>/dev/null || true
          cp "$OUT"/partitions*.bin dist/partitions.bin 2>/dev/null || true
          printf "bootloader.bin @ 0x1000\npartitions.bin @ 0x8000\nfirmware.bin   @ 0x10000\n" > dist/offsets.txt
          printf "%s\n" \
            "# Flash via Android (ESP32_flash)" \
            "1) ESP32 → OTG → Android" \
            "2) bootloader.bin → 0x1000 (opsional jika ada)" \
            "3) partitions.bin → 0x8000 (opsional jika ada)" \
            "4) firmware.bin   → 0x10000" \
            > dist/readme_android.md
          (cd dist && sha256sum * > SHA256SUMS.txt)
          ZIP="firmware_${GITHUB_REF_NAME#refs/tags/}.zip"
          (cd dist && zip -9 "../$ZIP" *)
          echo "zipname=$ZIP" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Firmware ${{ github.ref_name }} (ESP32)
          files: |
            ${{ steps.pio.outputs.dir }}/${{ steps.prep.outputs.zipname }}
            ${{ steps.pio.outputs.dir }}/dist/SHA256SUMS.txt
